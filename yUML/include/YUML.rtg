
regular tree grammar
  start Start
  productions
    ListStarOfAttribute16  -> ListPlusOfAttribute16
    ListStarOfAttribute16  -> <nil>()
    ListStarOfAttribute16  -> <conc>(ListStarOfAttribute16,ListStarOfAttribute16)
    ListPlusOfAttribute16  -> <conc>(ListStarOfAttribute16,ListPlusOfAttribute16)
    ListPlusOfAttribute16  -> <conc>(ListPlusOfAttribute16,ListStarOfAttribute16)
    ListPlusOfAttribute16  -> <conc>(ListPlusOfAttribute16,ListPlusOfAttribute16)
    ListPlusOfAttribute16  -> <cons>(Attribute,ListStarOfAttribute16)
    ListStarOfID2          -> ListPlusOfID2
    ListStarOfID2          -> <nil>()
    ListStarOfID2          -> <conc>(ListStarOfID2,ListStarOfID2)
    ListPlusOfID2          -> <conc>(ListStarOfID2,ListPlusOfID2)
    ListPlusOfID2          -> <conc>(ListPlusOfID2,ListStarOfID2)
    ListPlusOfID2          -> <conc>(ListPlusOfID2,ListPlusOfID2)
    ListPlusOfID2          -> <cons>(ID,ListStarOfID2)
    ListStarOfProperty20   -> ListPlusOfProperty20
    ListStarOfProperty20   -> <nil>()
    ListStarOfProperty20   -> <conc>(ListStarOfProperty20,ListStarOfProperty20)
    ListPlusOfProperty20   -> <conc>(ListStarOfProperty20,ListPlusOfProperty20)
    ListPlusOfProperty20   -> <conc>(ListPlusOfProperty20,ListStarOfProperty20)
    ListPlusOfProperty20   -> <conc>(ListPlusOfProperty20,ListPlusOfProperty20)
    ListPlusOfProperty20   -> <cons>(Property,ListStarOfProperty20)
    ListStarOfDefinition5  -> ListPlusOfDefinition5
    ListStarOfDefinition5  -> <nil>()
    ListStarOfDefinition5  -> <conc>(ListStarOfDefinition5,ListStarOfDefinition5)
    ListPlusOfDefinition5  -> <conc>(ListStarOfDefinition5,ListPlusOfDefinition5)
    ListPlusOfDefinition5  -> <conc>(ListPlusOfDefinition5,ListStarOfDefinition5)
    ListPlusOfDefinition5  -> <conc>(ListPlusOfDefinition5,ListPlusOfDefinition5)
    ListPlusOfDefinition5  -> <cons>(Definition,ListStarOfDefinition5)
    ListStarOfStringChar20 -> <string>
    ListPlusOfStringChar20 -> <string>
    OptLit20               -> <string>
    Type                   -> Type(ID)
    Type                   -> ListType(ID)
    Type                   -> SetType(ID)
    Field                  -> Field(ID,ID)
    Attribute              -> InverseAttribute(Field)
    Attributes             -> NoAttributes()
    Attributes             -> Attributes(ListPlusOfAttribute16)
    Property               -> ReferenceProperty(ID,Type,Attributes)
    Property               -> CompositeProperty(ID,Type)
    Property               -> Property(ID,Type)
    Inherits               -> InheritsNone()
    Inherits               -> Inherits(ListPlusOfID2)
    Definition             -> Entity(ID,Inherits,ListStarOfProperty20)
    Start                  -> Module(ID,ListStarOfDefinition5)
    EOF                    -> <string>
    CommentChar            -> <string>
    BackSlashChar          -> <string>
    StringChar             -> <string>
    STRING                 -> <string>
    INT                    -> <string>
    ID                     -> <string>
