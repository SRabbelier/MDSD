
regular tree grammar
  start Start
  productions
    ListStarOfID0               -> ListPlusOfID0
    ListStarOfID0               -> <nil>()
    ListStarOfID0               -> <conc>(ListStarOfID0,ListStarOfID0)
    ListPlusOfID0               -> <conc>(ListStarOfID0,ListPlusOfID0)
    ListPlusOfID0               -> <conc>(ListPlusOfID0,ListStarOfID0)
    ListPlusOfID0               -> <conc>(ListPlusOfID0,ListPlusOfID0)
    ListPlusOfID0               -> <cons>(ID,ListStarOfID0)
    ListStarOfVariable0         -> ListPlusOfVariable0
    ListStarOfVariable0         -> <nil>()
    ListStarOfVariable0         -> <conc>(ListStarOfVariable0,ListStarOfVariable0)
    ListPlusOfVariable0         -> <conc>(ListStarOfVariable0,ListPlusOfVariable0)
    ListPlusOfVariable0         -> <conc>(ListPlusOfVariable0,ListStarOfVariable0)
    ListPlusOfVariable0         -> <conc>(ListPlusOfVariable0,ListPlusOfVariable0)
    ListPlusOfVariable0         -> <cons>(Variable,ListStarOfVariable0)
    OptStreamAssignment0        -> <some>(StreamAssignment)
    OptStreamAssignment0        -> <none>()
    OptFunctionArguments0       -> <some>(FunctionArguments)
    OptFunctionArguments0       -> <none>()
    OptApplicationTarget3       -> <some>(ApplicationTarget)
    OptApplicationTarget3       -> <none>()
    ListStarOfFunctionArgument0 -> ListPlusOfFunctionArgument0
    ListStarOfFunctionArgument0 -> <nil>()
    ListStarOfFunctionArgument0 -> <conc>(ListStarOfFunctionArgument0,ListStarOfFunctionArgument0)
    ListPlusOfFunctionArgument0 -> <conc>(ListStarOfFunctionArgument0,ListPlusOfFunctionArgument0)
    ListPlusOfFunctionArgument0 -> <conc>(ListPlusOfFunctionArgument0,ListStarOfFunctionArgument0)
    ListPlusOfFunctionArgument0 -> <conc>(ListPlusOfFunctionArgument0,ListPlusOfFunctionArgument0)
    ListPlusOfFunctionArgument0 -> <cons>(FunctionArgument,ListStarOfFunctionArgument0)
    ListStarOfStatement0        -> ListPlusOfStatement0
    ListStarOfStatement0        -> <nil>()
    ListStarOfStatement0        -> <conc>(ListStarOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0        -> <conc>(ListStarOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0        -> <conc>(ListPlusOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0        -> <conc>(ListPlusOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0        -> <cons>(Statement,ListStarOfStatement0)
    ListStarOfDeclaration0      -> ListPlusOfDeclaration0
    ListStarOfDeclaration0      -> <nil>()
    ListStarOfDeclaration0      -> <conc>(ListStarOfDeclaration0,ListStarOfDeclaration0)
    ListPlusOfDeclaration0      -> <conc>(ListStarOfDeclaration0,ListPlusOfDeclaration0)
    ListPlusOfDeclaration0      -> <conc>(ListPlusOfDeclaration0,ListStarOfDeclaration0)
    ListPlusOfDeclaration0      -> <conc>(ListPlusOfDeclaration0,ListPlusOfDeclaration0)
    ListPlusOfDeclaration0      -> <cons>(Declaration,ListStarOfDeclaration0)
    ListStarOfStringChar0       -> <string>
    ListPlusOfStringChar0       -> <string>
    OptLit0                     -> <string>
    Variable                    -> Variable(ID)
    Selection                   -> Selection(ListPlusOfID0)
    Selector                    -> Selector(Selection)
    Integer                     -> Integer(INT)
    String                      -> String(STRING)
    All                         -> All()
    Statement                   -> Load
    Statement                   -> FunctionApplication
    Value                       -> Integer
    Value                       -> String
    Value                       -> All
    Value                       -> LambdaFunction
    Value                       -> Selector
    Value                       -> Variable
    VariableList                -> VariableList(ListPlusOfVariable0)
    FunctionApplication         -> FunctionApplication(OptStreamAssignment0,LambdaFunction,FunctionType)
    LambdaFunction              -> LambdaFunction(PipeName,OptFunctionArguments0)
    ApplicationTarget           -> ApplicationTarget(VariableList)
    ExtractName                 -> ExtractName(ID)
    FunctionType                -> ExtractFunction(ExtractName)
    FunctionType                -> ApplyFunction(OptApplicationTarget3)
    FunctionArgument            -> FunctionArgument(Value,ID)
    FunctionArguments           -> FunctionArguments(ListPlusOfFunctionArgument0)
    Assignment                  -> Assignment(Variable)
    StreamAssignment            -> Assignment(Variable)
    Output                      -> ExplicitOutput(VariableList)
    Output                      -> ImplicitOutput()
    Output                      -> NoOutput()
    Arguments                   -> Arguments(VariableList)
    Arguments                   -> NoArguments()
    Input                       -> ExplicitInput(VariableList)
    Input                       -> ImplicitInput()
    Input                       -> NoInput()
    Load                        -> Load(ID)
    PipeName                    -> PipeName(ID)
    Declaration                 -> Native(PipeName,Input,Arguments,Output)
    Declaration                 -> Pipe(PipeName,Input,Arguments,ListStarOfStatement0,Output)
    Start                       -> Start(ListStarOfDeclaration0)
    EOF                         -> <string>
    CommentChar                 -> <string>
    BackSlashChar               -> <string>
    StringChar                  -> <string>
    STRING                      -> <string>
    INT                         -> <string>
    ID                          -> <string>
